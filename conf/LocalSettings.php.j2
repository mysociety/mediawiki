<?php
# This file was automatically generated by the MediaWiki 1.19.20+dfsg-0+deb7u3
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "/mediawiki";
$wgArticlePath      = "/wiki/$1";
$wgUsePathInfo      = true;
$wgScriptExtension  = ".php";

## The relative URL path to the skins directory
$wgStylePath        = "$wgScriptPath/skins";


## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEmergencyContact = "wiki@wiki.mysociety.org";
$wgPasswordSender   = "wiki@wiki.mysociety.org";

$wgEnotifUserTalk      = true; # UPO
$wgEnotifWatchlist     = true; # UPO
$wgEmailAuthentication = true;

# Allow '@' in usernames
$wgInvalidUsernameCharacters = '#';
$wgUserrightsInterwikiDelimiter = '#';

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=utf8";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType    = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads  = true;
$wgFileExtensions = array( 'png', 'gif', 'jpg', 'jpeg', 'ai', 'svg', 'pdf', 'ppt', 'odt', 'doc', 'docx', 'ovpn' );

# Allow additional upload file types
$wgFileExtensions = array_merge( $wgFileExtensions,
    array(
        'xls', 'xlsx', 'ods', 'csv', 'tsv',
        'zip', 'vcf',
    )
);

#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons  = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_GB.UTF-8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = "en-gb";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook', 'vector':
$wgDefaultSkin = "vector";
wfLoadSkin( 'Vector' );

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl  = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# Query string length limit for ResourceLoader. You should only set this if
# your web server has a query string length limit (then set it to that limit),
# or if you have suhosin.get.max_value_length set in php.ini (then set it to
# that value)
$wgResourceLoaderMaxQueryLength = -1;

$wgExternalDiffEngine = 'wikidiff2';

# End of automatically generated settings.
# Add more configuration options below.
wfLoadExtension( 'Auth_remoteuser' );
wfLoadExtension( 'AWS' );
wfLoadExtension( 'ParserFunctions' );

// Don't let anonymous people do things...
$wgGroupPermissions['*']['createaccount']   = false;
// This allows the Authremoteuser extension to create users.
$wgGroupPermissions['*']['autocreateaccount'] = true;
$wgGroupPermissions['*']['read']            = false;
$wgGroupPermissions['*']['edit']            = false;

// see http://www.mediawiki.org/wiki/Manual:Hooks/SpecialPage_initList
// and http://www.mediawiki.org/w/Manual:Special_pages
// and http://lists.wikimedia.org/pipermail/mediawiki-l/2009-June/031231.html
// disable login and logout functions for all users
function LessSpecialPages(&$list) {
    unset( $list['Userlogout'] );
    unset( $list['Userlogin'] );
    return true;
}
$wgHooks['SpecialPage_initList'][]='LessSpecialPages';

// http://www.mediawiki.org/wiki/Extension:Windows_NTLM_LDAP_Auto_Auth
// remove login and logout buttons for all users
function StripLogin(&$personal_urls, &$wgTitle) {
    unset( $personal_urls["login"] );
    unset( $personal_urls["logout"] );
    unset( $personal_urls['anonlogin'] );
    return true;
}
$wgHooks['PersonalUrls'][] = 'StripLogin';

// This allows any html to be included on a wiki page. We use this on some
// pages to embed iframes.
// @see https://www.mediawiki.org/wiki/Manual:$wgRawHtml
$wgRawHtml = true;
$wgVerifyMimeType = false;

// This enables the API, so bots can do their thing
$wgEnableAPI = true;
$wgEnableWriteAPI = true;

# From Template

$wgSitename      = "{{ env['wgSitename'] }}";
$wgMetaNamespace = "{{ env['wgMetaNamespace'] }}";

## The protocol and server name to use in fully-qualified URLs
$wgServer           = "https://{{ env['wgServer'] }}";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "https://{{ env['wgServer'] }}/mediawiki/img_auth.php/{{ env['logo_filename'] }}";

## Database settings
$wgDBtype           = "mysql";
$wgDBserver         = "{{ env['wgDBserver'] }}";
$wgDBname           = "{{ env['wgDBname'] }}";
$wgDBuser           = "{{ env['wgDBname'] }}";
$wgDBpassword       = "{{ env['wgDBpassword'] }}";

# MySQL specific settings
$wgDBprefix         = "{{ env['wgDBprefix'] }}";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

## The path segment of the upload directory.
$wgUploadPath = "$wgScriptPath/img_auth.php";

$wgAWSCredentials = [
    'key'    => '{{ env['aws_access_key'] }}',
    'secret' => '{{ env['aws_secret_key'] }}',
    'token'  => false
];

$wgAWSRegion = '{{ env['wgAWSRegion'] }}';

// Replace <something> with the name of your S3 bucket, e.g. wonderfulbali234.
$wgAWSBucketName = "{{ env['wgAWSBucketName'] }}";

$wgSecretKey = "{{ env['wgSecretKey'] }}";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "{{ env['wgUpgradeKey'] }}";

#$wgDefaultUserOptions['searcheverything'] = 1;

$wgNamespacesToBeSearchedDefault = [
    NS_MAIN => true,
    NS_USER => true,
    NS_PROJECT => true,
    NS_CATEGORY => true,
];

# Email
$wgSMTP = [
  'host'     => "smtp.mysociety.org",
  'port'     => 25,
  'auth'     => "PLAIN",
  'username' => "{{ env['wgSMTP_username'] }}",
  'password' => '{{ env['wgSMTP_password'] }}'
];
