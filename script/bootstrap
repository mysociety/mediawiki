#!/bin/bash
#
# bootstrap - dependency management
#

set -e

cd "$(dirname "$0")/.."

# Get environment variables, if they exist.
ENV_FILE=${ENV_FILE:-conf/env.sh}
if [ -f "$ENV_FILE" ]; then
  echo "==> Loading environment from ${ENV_FILE}"
  source $ENV_FILE
fi

## Set-up virtualenv
echo "==> Setting up the virtualenv..."
# Some env variables used during development seem to make things break - set
# them back to the defaults which is what they would have on the servers.
PYTHONDONTWRITEBYTECODE=""

# This allows us to override the location of the virtualenv
VIRTUALENV_DIR=${VIRTUALENV_DIR:-venv}
virtualenv_activate="$VIRTUALENV_DIR/bin/activate"
if [ ! -f "$virtualenv_activate" ]; then
  python3 -m venv $VIRTUALENV_DIR
fi
source $virtualenv_activate

# Upgrade python package management
pip install --upgrade pip
pip install --upgrade setuptools

# Install what we need
pip install -r requirements.txt

echo "==> Done setting up virtualenv."

## Check for Terraform. We'll only warn here unless running a build.
if ! command -v terraform >/dev/null 2>&1 ; then
  if [ -n "$BUILD" ]; then
    echo "==> Terraform not found, build aborting."
    exit 2
  else
    echo "==> Warning: Terraform not found, required for build."
  fi
else
  echo "==> Terraform found, OK."
fi

## Git submodules, only needed for build.
if [ -n "$BUILD" ]; then
  echo "==> Checking git submodules..."
  git submodule update --init
fi
